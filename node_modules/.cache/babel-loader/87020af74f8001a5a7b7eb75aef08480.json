{"ast":null,"code":"var _jsxFileName = \"/Users/arej/Desktop/projekty/react-projekty/nabthat-project/src/components/MainComponent/MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport walmartData from \"./../../walmartData.json\";\nimport FirstBlockComponent from \"./FirstBlockComponent\";\nimport SecondBlockComponent from \"./SecondBlockComponent\";\nimport ThirdBlockComponent from \"./ThirdBlockComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction makeNewData(data, x, y) {\n  console.log(\"moje dane\");\n  console.log(data.walmart);\n  console.log(x);\n  console.log(y);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.walmart.map(item => {\n      {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: \"item.id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      }\n      {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: \"item.tresc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\nfunction MainComponent() {\n  _s();\n\n  //Stan bazy\n  const [data, setData] = useState([]);\n  const [newData, setNewData] = useState([]); //Stan przyciskow 1 blok\n\n  const [firstBlockButton, setFirstBlockButton] = useState(); //Stan przyciskow 2 blok\n\n  const [secondBlockButton, setSecondBlockButton] = useState();\n\n  const handleClickFirstBlock = e => {\n    setFirstBlockButton(e);\n  };\n\n  const handleClickSecondBlock = e => {\n    setSecondBlockButton(e);\n\n    if (firstBlockButton > 0) {\n      updateData(data, firstBlockButton, e);\n    }\n  }; //Aktualizacja danych, 1-1 = , 2-1 = , 3-1 =.\n  //Jezeli Zastap to = sprawdz czy istnieje element w nowej tablicy\n  // Jezeli istnieje jakis element usun go wszystko z tablicy i dodaj nowy element\n  // Jezeli nie istnieje zaden element, tablica pusta, dodaj nowy element\n  // Jezeli 1 przycisk = dodaj element pierwszy od gory do nowej tablicy\n  // Ze starej tablicy usun element\n\n\n  const updateData = (data, x, y) => {\n    console.log(data, x, y);\n\n    if (y == 1) {\n      // Pierwszy cytat = zastap\n      if (x == 1) {\n        //Jezeli nowa tablica jest pusta dodaj pierwszy cytat z podstawowej tablicy\n        //Jezeli tablica posiada 1 lub wiecej element wyzeruj tablice a nastepnie dodaj element\n        if (newData.length == 0) {\n          data.walmart.map(e => {\n            setNewData(current => [...current, e]);\n            console.log(\"oko\", newData);\n          });\n        } else {\n          console.log(\"oko\", newData);\n          console.log(e);\n        }\n      } // Drugi cytat = zastap\n\n\n      if (x == 2) {} // Random cytat = zastap\n\n\n      if (x == 3) {}\n    }\n\n    if (y == 2) {\n      // Pierwszy cytat = doklej\n      if (x == 1) {} // Drugi cytat = doklej\n\n\n      if (x == 2) {} // Random cytat doklej\n\n\n      if (x == 3) {}\n    }\n\n    return data;\n  }; //Aktualizacja nowych danych do pokazania\n\n\n  useEffect(() => {\n    setData(walmartData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nag\\u0142\\xF3wek h1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FirstBlockComponent, {\n          handleClickFirstBlock: handleClickFirstBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SecondBlockComponent, {\n          handleClickSecondBlock: handleClickSecondBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ThirdBlockComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainComponent, \"Kbfa+KgzTLNP81i9PYfupViDO3A=\");\n\n_c = MainComponent;\nexport default MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","useEffect","walmartData","FirstBlockComponent","SecondBlockComponent","ThirdBlockComponent","makeNewData","data","x","y","console","log","walmart","map","item","MainComponent","setData","newData","setNewData","firstBlockButton","setFirstBlockButton","secondBlockButton","setSecondBlockButton","handleClickFirstBlock","e","handleClickSecondBlock","updateData","length","current"],"sources":["/Users/arej/Desktop/projekty/react-projekty/nabthat-project/src/components/MainComponent/MainComponent.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport walmartData from \"./../../walmartData.json\" \n\nimport FirstBlockComponent from \"./FirstBlockComponent\";\nimport SecondBlockComponent from \"./SecondBlockComponent\";\nimport ThirdBlockComponent from \"./ThirdBlockComponent\";\n\nfunction makeNewData (data, x, y) {\n    console.log(\"moje dane\");\n    console.log(data.walmart)\n    console.log(x)\n    console.log(y)\n\n    return (\n        <div>\n            {data.walmart.map(item => {\n                {<p>item.id</p>}\n                {<p>item.tresc</p>   }\n            })}\n        </div>\n    )\n}\n\nfunction MainComponent() {\n    //Stan bazy\n    const [data,setData] = useState([]);\n    const [newData, setNewData] = useState([]); \n    //Stan przyciskow 1 blok\n    const [firstBlockButton, setFirstBlockButton] = useState();\n    //Stan przyciskow 2 blok\n    const [secondBlockButton, setSecondBlockButton] = useState();\n\n\n    const handleClickFirstBlock = (e) => {\n        setFirstBlockButton(e);\n      }\n    \n    const handleClickSecondBlock = (e) => {\n        setSecondBlockButton(e)\n        if (firstBlockButton > 0) {\n            updateData(data, firstBlockButton, e);\n        }\n    }\n\n    //Aktualizacja danych, 1-1 = , 2-1 = , 3-1 =.\n    //Jezeli Zastap to = sprawdz czy istnieje element w nowej tablicy\n    // Jezeli istnieje jakis element usun go wszystko z tablicy i dodaj nowy element\n    // Jezeli nie istnieje zaden element, tablica pusta, dodaj nowy element\n    // Jezeli 1 przycisk = dodaj element pierwszy od gory do nowej tablicy\n    // Ze starej tablicy usun element\n\n    const updateData = (data, x, y) => {\n        console.log(data, x, y)\n        if (y == 1) {\n            // Pierwszy cytat = zastap\n            if(x == 1) {\n                //Jezeli nowa tablica jest pusta dodaj pierwszy cytat z podstawowej tablicy\n                //Jezeli tablica posiada 1 lub wiecej element wyzeruj tablice a nastepnie dodaj element\n                if (newData.length == 0) {\n                    data.walmart.map((e) => {\n                        setNewData(current => [...current, e])\n                        console.log(\"oko\", newData);                        \n                    }) \n                } else {\n                    console.log(\"oko\", newData); \n                    console.log(e)\n                }\n                \n            }\n            // Drugi cytat = zastap\n            if(x == 2) {\n\n            }\n            // Random cytat = zastap\n            if(x == 3) {\n\n            }\n        }\n        if ( y == 2) {\n            // Pierwszy cytat = doklej\n            if(x == 1) {\n\n            }\n            // Drugi cytat = doklej\n            if(x == 2) {\n\n            }\n            // Random cytat doklej\n            if(x == 3) {\n\n            }\n        }\n        return data;\n    }\n\n    //Aktualizacja nowych danych do pokazania\n\n    useEffect(() => {\n        setData(walmartData); \n        \n    }, [])\n \n    return (\n        <>\n        <div>\n            <h1>Nagłówek h1</h1>\n        </div>\n        <div>\n            <div>\n                <FirstBlockComponent handleClickFirstBlock={handleClickFirstBlock}/>\n            </div>\n            <div>\n                <SecondBlockComponent handleClickSecondBlock={handleClickSecondBlock}/>\n            </div>\n            <div>\n                <ThirdBlockComponent/>\n            </div> \n         \n            \n        </div>\n        </>\n    )\n}\n\nexport default MainComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}